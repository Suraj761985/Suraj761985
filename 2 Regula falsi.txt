Regula Falsi.wxmx

Practical 2(b):
Regula-Falsi method
Theory: Regula falsi method iteratively
determines a sequence of root enclosing
intervals,(an,bn) containing the approximate
root pn. Like in Bisection method, the interval
under consideration must follow f(an)f(bn) < 0
however, pn is no longer the mid point of the
interval (an,bn). In Regula falsi, pn is the x
intercept of the line joining (an,f(an)) and
(bn, f(bn)). pn is given by the following
formula:
pn= bn-f(bn)[bn-an]/f(bn)-f(an)
=(an.f(bn)-bn.f(an))/f(bn)-f(an)
Q1 Perform 10 iterations of the Regula-Falsi
method to obtain a real root of the following
equation in the interval(-1,1):
f(x) = x^3-5x+1=0.
Solution:

1 / 3

Regula Falsi.wxmx

➔

2 / 3

kill(all)$
f(x):=x^(3)−5·x+1;
'x0=x0:−1.0;
'x1=x1:1.0;
n:10$
if(float(f(x0)·f(x1)>0)) then
print("change values")
else
for i:1 thru n do
(x2:float(((x0·f(x1))−(x1·f(x0)))/(f(x1)−f(x0))),
if (f(x2)·f(x1)<0) then x0:x2 /*If f(x2)f(x1) < 0,
then it means x2 and x1 are of opposite signs. The new interval
is (x2,x1), so we do the replacement x0:x2.*/
else (x1:x2),print("iteration",i,"gives",x2))$
print("After",n," iterations the root is",x2)$
wxplot2d(f(x),[x,−1,1]);
3

(%o1) f ( x ) := x − 5 x + 1
(%o2) x0 = − 1.0
(%o3) x1 = 1.0
iteration 1 gives 0.25
iteration 2 gives 0.1940298507462687
iteration 3 gives 0.2016886549593477
iteration 4 gives 0.2016397213245381
iteration 5 gives 0.201639675765857
iteration 6 gives 0.2016396757234442
iteration 7 gives 0.2016396757234047
iteration 8 gives 0.2016396757234046
iteration 9 gives 0.2016396757234047
iteration 10 gives 0.2016396757234047
After 10 iterations the root is 0.2016396757234047

(%t7)

(%o7)

Regula Falsi.wxmx

3 / 3

Q2 Perform 6 iterations of the Regula-Falsi
method to obtain a real root of the following
equation in the interval(-1,1):
f(x) = x^2-4=0.
Solution:
➔

kill(all)$
f(x):=x^(2)−4;
x0=x0:−1.0;
x1=x1:1.0;
n:6$
if(float(f(x0)·f(x1)>0)) then
print("change values")
else
for i:1 thru n do
(x2:float(((x0·f(x1))−(x1·f(x0)))/(f(x1)−f(x0))),
if (f(x2)·f(x1)<0) then x0:x2
else (x1:x2),print("iteration",i,"gives",x2))$
print("After",n," iterations the root is",x2)$
2

(%o1) f ( x ) := x − 4
(%o2) x0 = − 1.0
(%o3) x1 = 1.0
change values
After 6 iterations the root is x2

Assignment: Do two similar questions.

