Practical 4(a)-Gauss elimination.wxmx

PRACTICAL 4(a)
Aim: To solve the
system of equations
using Gaussian
elimination method.
ASSIGNMENT
1 Q1.Solve the system of
equations
3x1 - 0.1x2 - 0.2x3 = 7.85
0.1x1 + 7x2 -0.3x3 = -19.3
0.3x1 - 0.2x2 + 10x3 = 71.4
using the Gauss elimination
method.

1 / 10

Practical 4(a)-Gauss elimination.wxmx

➔

2 / 10

kill(all)$ /* kill all variables and clear memory */
keepfloat:true$ /* keep float values as it is */
'A = A:matrix( /* function to create a matrix */
[3, −0.1, −0.2],
[0.1, 7, −0.3],
[0.3, −0.2, 10])$
'B = B:matrix(
[7.85], [−19.3], [71.4])$
'X = X:matrix(
['x], ['y], ['z])$
/* Self-explainatory print statements */
print("Let",'A=A,",",'B=B,",",'X=X)$
print("")$
print("Now, the augmented matrix will be,")$
print("")$
/* Creating augmented matrix by joining B to A */
/* Since, B is a column matrix, addcol adds it to end */
'Aug = Aug:addcol(A,B);
print("")$
print("I. FORWARD ELIMINATION")$
n:length(A[1])$
/* -------- Forward Elimination -------- */
/* Moving from one pivot row to the next */
for k:1 thru n−1 do(
/* Moving below the pivot row */
for i:k+1 thru n do(
factor: Aug[i,k]/Aug[k,k],
print(""),
print("=> R",i,"= R",i,"- (",'Aug[i,k]/'Aug[k,k],")*","R",k),
/* Applying Ri -> Ri - (Augik/Augkk)*Rk */
Aug[i]: Aug[i]−factor·Aug[k],
print(Aug)
)
)$
print("")$
print("Therefore, the augmented matrix")$
print("reduced to upper triangular form will be,")$
print("")$
Aug;
/* Printing reduced system of eqs */
print("")$
print("Now, the system of equations will be,")$
load("eigen")$ /* to use innerproduct function */
/* innerproduct returns dot product */
/* submatrix returns a new matrix from matrix Aug
with mentioned rows and columns deleted. */
AA:innerproduct(submatrix(Aug,n+1),X)$

Practical 4(a)-Gauss elimination.wxmx

2 Q2.Solve the following system
of equations
10x +2y - z = 27
-3x -6y + 2z = –61.5
x + y + 5z =-21.5
using Gaussian elimination
method.

3 / 10

Practical 4(a)-Gauss elimination.wxmx

➔

4 / 10

kill(all)$ /* kill all variables and clear memory */
keepfloat:true$ /* keep float values as it is */
'A = A:matrix( /* function to create a matrix */
[10, 2, −1],
[−3, −6, 2],
[1, 1, 5])$
'B = B:matrix(
[27], [−61.5], [−21.5])$
'X = X:matrix(
['x], ['y], ['z])$
/* Self-explainatory print statements */
print("Let",'A=A,",",'B=B,",",'X=X)$
print("")$
print("Now, the augmented matrix will be,")$
print("")$
/* Creating augmented matrix by joining B to A */
/* Since, B is a column matrix, addcol adds it to end */
'Aug = Aug:addcol(A,B);
print("")$
print("I. FORWARD ELIMINATION")$
n:length(A[1])$
/* -------- Forward Elimination -------- */
/* Moving from one pivot row to the next */
for k:1 thru n−1 do(
/* Moving below the pivot row */
for i:k+1 thru n do(
factor: Aug[i,k]/Aug[k,k],
print(""),
print("=> R",i,"= R",i,"- (",'Aug[i,k]/'Aug[k,k],")*","R",k),
/* Applying Ri -> Ri - (Augik/Augkk)*Rk */
Aug[i]: Aug[i]−factor·Aug[k],
print(Aug)
)
)$
print("")$
print("Therefore, the augmented matrix")$
print("reduced to upper triangular form will be,")$
print("")$
Aug;
/* Printing reduced system of eqs */
print("")$
print("Now, the system of equations will be,")$
load("eigen")$ /* to use innerproduct function */
/* innerproduct returns dot product */
/* submatrix returns a new matrix from matrix Aug
with mentioned rows and columns deleted. */
AA:innerproduct(submatrix(Aug,n+1),X)$

Practical 4(a)-Gauss elimination.wxmx

3 Q3.Solve the following system
of equations
4x – y + 2z = 15
-x + 2y + 3z = 5
5x - 7y + 9z = 8
using Gauss elimination
method.

5 / 10

Practical 4(a)-Gauss elimination.wxmx

➔

6 / 10

kill(all)$ /* kill all variables and clear memory */
keepfloat:true$ /* keep float values as it is */
'A = A:matrix( /* function to create a matrix */
[4, −1, 2],
[−1, 2, 3],
[5, −7, 9])$
'B = B:matrix(
[15], [5], [8])$
'X = X:matrix(
['x], ['y], ['z])$
/* Self-explainatory print statements */
print("Let",'A=A,",",'B=B,",",'X=X)$
print("")$
print("Now, the augmented matrix will be,")$
print("")$
/* Creating augmented matrix by joining B to A */
/* Since, B is a column matrix, addcol adds it to end */
'Aug = Aug:addcol(A,B);
print("")$
print("I. FORWARD ELIMINATION")$
n:length(A[1])$
/* -------- Forward Elimination -------- */
/* Moving from one pivot row to the next */
for k:1 thru n−1 do(
/* Moving below the pivot row */
for i:k+1 thru n do(
factor: Aug[i,k]/Aug[k,k],
print(""),
print("=> R",i,"= R",i,"- (",'Aug[i,k]/'Aug[k,k],")*","R",k),
/* Applying Ri -> Ri - (Augik/Augkk)*Rk */
Aug[i]: Aug[i]−factor·Aug[k],
print(Aug)
)
)$
print("")$
print("Therefore, the augmented matrix")$
print("reduced to upper triangular form will be,")$
print("")$
Aug;
/* Printing reduced system of eqs */
print("")$
print("Now, the system of equations will be,")$
load("eigen")$ /* to use innerproduct function */
/* innerproduct returns dot product */
/* submatrix returns a new matrix from matrix Aug
with mentioned rows and columns deleted. */
AA:innerproduct(submatrix(Aug,n+1),X)$

Practical 4(a)-Gauss elimination.wxmx

4 Q4.Solve the following system
of equations
0.5x1 - x2 = -9.5
1.02x1 -2x2 = -18.8
using Gaussian elimination
method.

7 / 10

Practical 4(a)-Gauss elimination.wxmx

➔

8 / 10

kill(all)$ /* kill all variables and clear memory */
keepfloat:true$ /* keep float values as it is */
'A = A:matrix( /* function to create a matrix */
[0.5, −1],
[1.02, −2])$
'B = B:matrix(
[−9.5], [−18.8])$
'X = X:matrix(
['x], ['y])$
/* Self-explainatory print statements */
print("Let",'A=A,",",'B=B,",",'X=X)$
print("")$
print("Now, the augmented matrix will be,")$
print("")$
/* Creating augmented matrix by joining B to A */
/* Since, B is a column matrix, addcol adds it to end */
'Aug = Aug:addcol(A,B);
print("")$
print("I. FORWARD ELIMINATION")$
n:length(A[1])$
/* -------- Forward Elimination -------- */
/* Moving from one pivot row to the next */
for k:1 thru n−1 do(
/* Moving below the pivot row */
for i:k+1 thru n do(
factor: Aug[i,k]/Aug[k,k],
print(""),
print("=> R",i,"= R",i,"- (",'Aug[i,k]/'Aug[k,k],")*","R",k),
/* Applying Ri -> Ri - (Augik/Augkk)*Rk */
Aug[i]: Aug[i]−factor·Aug[k],
print(Aug)
)
)$
print("")$
print("Therefore, the augmented matrix")$
print("reduced to upper triangular form will be,")$
print("")$
Aug;
/* Printing reduced system of eqs */
print("")$
print("Now, the system of equations will be,")$
load("eigen")$ /* to use innerproduct function */
/* innerproduct returns dot product */
/* submatrix returns a new matrix from matrix Aug
with mentioned rows and columns deleted. */
AA:innerproduct(submatrix(Aug,n+1),X)$
BB:col(Aug,n+1)$ /* col returns specified column */
for i:1 thru n do(

Practical 4(a)-Gauss elimination.wxmx

5 Q5.Solve the system of
equations
7x - 11z = -17
-4x - 3y + 3z = 9
25x + 7y + 8z = 34
using Gauss elimination
method.

9 / 10

Practical 4(a)-Gauss elimination.wxmx

➔

10 / 10

kill(all)$
keepfloat:true$
'A = A:matrix(
[7, 0, 11],
[−4, −3, 3],
[25, 7, 8])$
'B = B:matrix(
[−17], [9], [34])$
'X = X:matrix(
['x], ['y], ['z])$
print("Let",'A=A,",",'B=B,",",'X=X)$
print("")$
print("Now, the augmented matrix will be,")$
print("")$
'Aug = Aug:addcol(A,B);
print("")$
print("I. FORWARD ELIMINATION")$
n:length(A[1])$
/* -------- Forward Elimination -------- */
for k:1 thru n−1 do(
/* Partial Pivoting */
/* determine the largest element in the column */
/* and store the row number to max_i */
max_i: k,
for i:k thru n do(
if abs(Aug[i,k]) > abs(Aug[max_i,k]) then
max_i: i
),
if max_i#k then( /* if row number is not k */
/* switch rows */
[Aug[k],Aug[max_i]]:[Aug[max_i],Aug[k]],
print(""),
print("=> R",k,"< -- >","R",max_i),
print(Aug)
),
for i:k+1 thru n do(
factor: Aug[i,k]/Aug[k,k],
print(""),
print("=> R",i,"= R",i,"- (",'Aug[i,k]/'Aug[k,k],")*","R",k),
/* Applying Ri -> Ri - (Augik/Augkk)*Rk */
Aug[i]: Aug[i]−factor·Aug[k],
print(Aug)
)
)$
print("")$
print("Therefore, the augmented matrix")$
print("reduced to upper triangular form will be,")$

