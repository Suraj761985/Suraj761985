Artificial intelligence
Practical file

Name: Maruf Saify
Class: Bsc(H) Electronics
Roll no: 17506
Semester: IVth (2nd year)
Subject: Artificial intelligence

Program 1: Code to store elements in a list

Input code:
list = []
n = int(input('Enter the no of elements to be entered in the
list:\n'))
for i in range(0,n):
print('enter the',i+1,'element')
temp=input()
list.append(temp)
print(list)

Output:

Program 2: Program to sort the elements of a list

Code:
list= []
for i in range(0,6):
print("Enter the marks of ",i+1,"student")
temp=int(input())
list.append(temp)
list.sort()
print(list)

Output:

Program 3: To print the value of the key in dictionaries

Code:
dict = {'dog':'kutta','cat':'billi','pig':'suar'}
a = input('Enter the word\n')
print('The meaning of the given word is: ',end="")
print(dict.get(a))

Output:

Program 4: To find the greatest no

Code:
n1 = int(input('enter the first no '))
n2 = int(input('enter the second no '))
n3 = int(input('enter the third no '))
n4 = int(input('enter the fourth no '))
if (n1 > n2 and n1>n3 and n1>n4):
print(n1,'is greatest number')
elif (n2 > n1 and n2 > n3 and n2 >n4 ):
print(n2,'is the greatest number')
elif(n3>n1 and n3>n2 and n3>n4):
print(n3,'is the greatest no')
else:
print(n4,' is the greatest no')

Output:

Program 5: To print what is the grade of a student on the
basis of his marks.
Code:
marks= int(input('Enter the marks of the student\n'))
if (marks<=100 and marks>90):
print('grade = extenstion')
elif (marks<=90 and marks>80):
print('grade = A')
elif (marks<=80 and marks>70):
print('grade = B')
elif (marks<=70 and marks>60):
print('grade = C')
elif(marks<=60 and marks>50):
print('grade = D')
elif(marks<=50 and marks>=0):
print('fail')
else:
print('Enter valid marks')

Output:

Program 6: To check whether a number a prime or
composit
Code:
n = int(input('Enter the no'))
j=0
if (n==1):
print(n,'is neither prime nor composit')
else:
for i in range (2,n):
if n%i == 0:
j =1
if j==0:
print(n,'is prime')
elif j==1:
print(n,'is not prime')

Output:

Program 7: Factorial of a number

Code:
# factorial of a number using for loop
n = int(input('Enter the no to find its factorial\n'))
fact=1
for i in range (1,n+1):
fact = fact*i
print('the factorial of the given no is ',fact)

Output:

Practical 8: Printing the table using function
Code:
# to print the multiplication table
def table(a):
for i in range (10):
print (a,'*',i+1,'=',a*(i+1))
n = int(input('Enter the number to show the table\n'))
print(table(n))

Output:

Practical 9 : Printing the sum of n natural numbers using
recursion
Code:
# sum of n natural numbers using recursion
def sum_recursion(n):
if n==1:
return 1
else:
sum = n + sum_recursion(n-1)
return sum
s = int(input('Enter the value of n\n'))
print('The value of the sum is',sum_recursion(s))

Output:

Practical 10: Greatest of three number
using function.
Code:
# program to find the greatest of three number
def greater(a,b):
if a>b:
return a
else:
return b
n1= int(input('Enter the first number\n'))
n2 = int(input('Enter the second number\n'))
n3 = int(input('Enter the third number\n'))
g = greater(n1,n2)
g1 = greater(g,n3)
print(g1,'is the greatest of the given numbers')

Output:

Practical 11: To convert from inches to
centimeter using function.

Code:
# conversion from inches to centimeter
def converter(a):
return a*2.54
i = int(input('enter the length in inches\n'))
print('the length in centimeter is:',converter(i),'cm')

Output:

Practical 12: square, square root and cube
using class object
Code:
# class calculator capable of finding square and square root and cube
class calculate:
def __init__(self,number):
self.num = number
def square(self):
print(f'the square of {self.num} is {self.num**2}')
def squareroot(self):
print(f'the squareroot of {self.num} is {self.num**0.5}')
def cube(self):
print(f'the cube of {self.num} is {self.num**3}')

a = calculate(9)
a.square()
a.squareroot()
a.cube()

Output:

